// lib/meta/create-meta-campaign.ts
export async function createMetaCampaign({
    accessToken,
    adAccountId,
    name,
    objective,
    budget,
    imageUrl,
    description,
}: {
    accessToken: string;
    adAccountId: string;
    name: string;
    objective: string;
    budget: number;
    imageUrl?: string;
    description?: string;
}) {
    const baseUrl = `https://graph.facebook.com/v21.0/${adAccountId}`;

    // 1. Campaign
    const campaignRes = await fetch(`${baseUrl}/campaigns`, {
        method: "POST",
        headers: { Authorization: `Bearer ${accessToken}` },
        body: new URLSearchParams({
            name,
            objective, // e.g. "OUTCOME_TRAFFIC" or "OUTCOME_SALES"
            status: "PAUSED", // cria pausada para revisão antes de ativar
        }),
    });
    const campaign = await campaignRes.json();
    if (!campaign.id) throw new Error(`❌ Failed campaign: ${JSON.stringify(campaign)}`);

    // 2. Ad Set
    const adsetRes = await fetch(`${baseUrl}/adsets`, {
        method: "POST",
        headers: { Authorization: `Bearer ${accessToken}` },
        body: new URLSearchParams({
            name: `${name} - AdSet`,
            campaign_id: campaign.id,
            billing_event: "IMPRESSIONS",
            optimization_goal: "REACH",
            daily_budget: String(budget * 100), // Meta usa centavos
            start_time: new Date(Date.now() + 60 * 60 * 1000).toISOString(), // começa em 1h
            status: "PAUSED",
        }),
    });
    const adset = await adsetRes.json();
    if (!adset.id) throw new Error(`❌ Failed adset: ${JSON.stringify(adset)}`);

    // 3. Creative (aqui uso só imagem + texto simples)
    const creativeRes = await fetch(`${baseUrl}/adcreatives`, {
        method: "POST",
        headers: { Authorization: `Bearer ${accessToken}` },
        body: new URLSearchParams({
            name: `${name} Creative`,
            object_story_spec: JSON.stringify({
                page_id: "YOUR_PAGE_ID",
                link_data: {
                    message: description ?? "Generated by CampleteAI",
                    link: "https://camplete.ai", // link alvo
                    image_hash: imageUrl, // ou usar upload de imagem antes
                },
            }),
        }),
    });
    const creative = await creativeRes.json();
    if (!creative.id) throw new Error(`❌ Failed creative: ${JSON.stringify(creative)}`);

    // 4. Ad
    const adRes = await fetch(`${baseUrl}/ads`, {
        method: "POST",
        headers: { Authorization: `Bearer ${accessToken}` },
        body: new URLSearchParams({
            name: `${name} Ad`,
            adset_id: adset.id,
            creative: JSON.stringify({ creative_id: creative.id }),
            status: "PAUSED",
        }),
    });
    const ad = await adRes.json();
    if (!ad.id) throw new Error(`❌ Failed ad: ${JSON.stringify(ad)}`);

    return { campaign, adset, creative, ad };
}
